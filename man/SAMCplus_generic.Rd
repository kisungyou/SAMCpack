% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SAMCplus.R
\name{SAMCplus}
\alias{SAMCplus}
\title{SAMC Sampler with C++}
\usage{
SAMCplus(nv, energy, domain = c(-Inf, Inf), partition = seq(-100, 100,
  length.out = 9), vecpi = rep(1/10, 10), tau = 1, niter = 20000,
  t0 = 200, xi = 2/3, stepsize = 1, trange = c(-Inf, Inf),
  data = NA)
}
\description{
SAMC Sampler with C++
}
\examples{
\dontrun{
##### (1) Two-Dimensional Multimodal sampling
## Define negative log-density function as CPP function
cppscript = "SEXP funcH(arma::vec x){
double x1 = x(0);
double x2 = x(1);
double val1 = (-std::pow((x1*sin(20*x2)+x2*sin(20*x1)),2))*cosh(sin(10*x1)*x1);
double val2 = (-std::pow((x1*cos(10*x2)-x2*sin(10*x1)),2))*cosh(cos(20*x2)*x2);
return Rcpp::wrap(val1+val2);
}"
func_ptr = RcppXPtrUtils::cppXPtr(cppscript,depends="RcppArmadillo") # as a pointer

## Other Experimental Setting
ex_part   = c(-Inf,seq(from=-8,to=0,by=0.2))
m         = length(ex_part)-1
ex_temp   = 1.0
ex_step   = (0.25)
ex_vecpi  = as.vector(array(1/m,c(1,m)))
ex_domain = c(-1.1,1.1)
ex_niter  = 200000

## Run The Code
res = SAMCplus(2,func_ptr,partition=ex_part,tau=ex_temp,stepsize=ex_step,vecpi=ex_vecpi,domain=ex_domain,niter=ex_niter)

## Visualize
select = seq(from=101,to=ex_niter,by=100) # 100 burn-in, 1/100 thinning 
par(mfrow=c(1,2))
plot(res$samples[select,1], res$samples[select,2],xlab='x',ylab='y',main='samples')
barplot(as.vector(res$frequency/sum(res$frequency)),
        main="visiting frequency by energy partition",
        names.arg=ex_part[2:(m+1)], xlab="energy")

##### (2) Use Extra Data
## Define negative log-density function as CPP function
cppscript2 = "SEXP funcH2(arma::vec x, arma::vec data){
double x1 = x(0);
double x2 = x(1);
double par1 = data(0);
double par2 = data(1);

double val1 = (-std::pow((x1*sin(par2*x2)+x2*sin(par2*x1)),2))*cosh(sin(par1*x1)*x1);
double val2 = (-std::pow((x1*cos(par1*x2)-x2*sin(par1*x1)),2))*cosh(cos(par2*x2)*x2);
return Rcpp::wrap(val1+val2);
}"
func_ptr2 = RcppXPtrUtils::cppXPtr(cppscript2,depends="RcppArmadillo") # as a pointer

## Run The Code
vecdata = as.vector(c(10,20))
res2 = SAMCplus(2,func_ptr2,partition=ex_part,tau=ex_temp,stepsize=ex_step,vecpi=ex_vecpi,domain=ex_domain,niter=ex_niter,data=vecdata)
select = seq(from=101,to=ex_niter,by=100) # 100 burn-in, 1/100 thinning 
par(mfrow=c(1,2))
plot(res2$samples[select,1], res2$samples[select,2],xlab='x',ylab='y',main='samples')
barplot(as.vector(res2$frequency/sum(res2$frequency)),
        main="visiting frequency by energy partition",
        names.arg=ex_part[2:(m+1)], xlab="energy")
}

}
\author{
Kisung You
}
