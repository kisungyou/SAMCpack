% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SAMCoptim.R
\name{SAMCoptim}
\alias{SAMCoptim}
\title{Stochastic Approximation Annealing}
\usage{
SAMCoptim(fn, lower, upper, options = list(), ...)
}
\description{
Stochastic Approximation Annealing
}
\examples{
\donttest{
##### Two-Dimensional Multimodal sampling
## Step 1 : Define negative log-density function as an R function
func_r = function(x){
x1 = x[1]; x2 = x[2];
val1 = (-(x1*sin(20*x2)+x2*sin(20*x1))^2)*cosh(sin(10*x1)*x1);
val2 = (-(x1*cos(10*x2)-x2*sin(10*x1))^2)*cosh(cos(20*x2)*x2);
return(val1+val2);
}

## Step 2 : Prepare a setting option
myoption = list()
myoption$partition = c(-Inf,seq(from=-10,to=0,length.out=41))
myoption$tau       = 1.0
myoption$domain    = c(-1.1,1.1)
myoption$vecpi     = as.vector(rep(1/41,41))
myoption$niter     = 20000
myoption$stepsize  = c(0.25, 10)

## Step 3 : Run The Code
res = SAMCoptim(func_r,lower=c(-1.1,-1.1), upper=c(1.1,1.1), options=myoption)

## Step 4 : Visualize
par(mfrow=c(1,2))
#  4-1. plot all samples
select = seq(from=101,to=myoption$niter,by=100) # 100 burn-in, 1/100 thinning 
sam.x  = res$samples[select,1] # 1st coordinate
sam.y  = res$samples[select,2] # 2nd coordinate
plot(sam.x,sam.y,xlab='x',ylab='y',main='samples',xlim=c(-1.2,1.2),ylim=c(-1.2,1.2))

#  4-2. plot samples with minimal values
nval   = 3
idmin  = which(res$fnval<=sort(res$fnval))
opt.x  = res$samples[idmin,1] # 1st coordinate
opt.y  = res$samples[idmin,2] # 2nd coordinate
plot(opt.x,opt.y,xlab='x',ylab='y',main='optimal samples',xlim=c(-1.2,1.2),ylim=c(-1.2,1.2))

#  4-3. evoluation
plot(1:length(select),res$fnval[select],"b")
}

}
